function outM = oneSweep(inM)
% One step of Conwayâ€™s Game of Life.
% inM and outM are 0-1 matrices of the same size. 1 is live; 0 is dead.
% inM is the initial state; outM is the state after 1 step of the game.
% Every "cell" in the matrix interacts with its immediate neighbors, which
% are the cells that are horizontally, vertically, or diagonally adjacent.
% At this time step, the following transitions occur:
% A live cell with fewer than 2 live neighbors dies (under-population).
% A live cell with 2 or 3 live neighbors lives on.
% A live cell with more than 3 live neighbors dies (overcrowding).
% A dead cell with exactly 3 live neighbors becomes live (reproduction).

% cordinate offsets for all neighbors
xPos=[-1,0,1,-1,1,-1, 0,1];
yPos=[ 1,1,1, 0,0,-1,-1,-1];

% determines size of board
[xSize,ySize]=size(inM);

% preallocation
outM=zeros(xSize,ySize);

% traverses board
for x=1:xSize
    for y=1:ySize
        % resets living neighbor count
        total=0;

        % traverses neighbor vectors
        for pos=1:length(xPos)
                 try  
                    % tries to add value of neighbors
                    % if this fails, catches 
                    total=total+inM(x+xPos(pos),y+yPos(pos));
                 catch
                    % if neighboring cell does not exist (edge of frame)
                    %disp('dominic pls')
                 end
        end

        if inM(x,y)==1
            if total<2
                 outM(x,y)=0;
             elseif total==2 || total == 3
                 outM(x,y)=1;
            else
                 outM(x,y)=0;
             end
        else
            if total==3
                 outM(x,y)=1;
            end
        end
      
    end
end


